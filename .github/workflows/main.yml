name: CI

on: [push, pull_request]

jobs:
    build-test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [18.x]
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - run: npm i
            - run: npm run lint
            - run: npm run type
            - run: npm run build
            - run: npm test
    deploy:
        runs-on: ubuntu-latest
        needs: build-test
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        steps:
            - uses: actions/checkout@v3
            - uses: docker/metadata-action@v4
              id: meta
              with:
                  images: ${{ secrets.DOCKER_HUB_USERNAME }}/node-app
                  tags: |
                      type=raw,value={{date 'YYYYMMDD'}}
            - uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            - uses: docker/setup-buildx-action@v2
            - uses: docker/build-push-action@v3
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
